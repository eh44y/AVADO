plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
  
}

group = 'com.final'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.1.4'
    // implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.1'
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.1.5'
}

tasks.named('test') {
    useJUnitPlatform()
}

// 아래 코드는 통합 build를 위한 코드

def reactDir = "$projectDir/src/main/webapp/frontend";

sourceSets{
    main{
        resources{
            srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

processResources{
    dependsOn "copyReactBuildFiles"
}

task installReact(type:Exec){
    //workingDir "$reactDir"
    workingDir "/Users/tj/.eclipse/workspace/final_project/backend/src/main/webapp/frontend"
    inputs.dir "$reactDir"
    group = BasePlugin.BUILD_GROUP
    
    if(System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
        //commandLine "cmd", "/c", "npm", "audit", "fix"
        commandLine "cmd", "/c", 'npm.cmd', 'install', '--force'
    }else{
        //commandLine "npm", "audit", "fix"
        commandLine "cmd", "/c", 'npm.cmd', 'install', '--force'
    }
}

task buildReact(type:Exec){
    dependsOn "installReact"
    workingDir "$reactDir"
    inputs.dir "$reactDir"
    group = BasePlugin.BUILD_GROUP
    
    if(System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
        commandLine "npm.cmd", "run-script", "build"
    }else{
        commandLine "npm", "run-script", "build"
    }
}

task copyReactBuildFiles(type:Copy){
    dependsOn "buildReact"
    from "$reactDir/build"
    into "$projectDir/src/main/resources/static"
}
